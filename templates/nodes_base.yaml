AWSTemplateFormatVersion: '2010-09-09'
Description: ASG for modes

Parameters:

    EnvironmentName:
      Description: An environment name that will be prefixed to resource names
      Type: String

    InstanceType:
        Description: Which instance type should we use?
        Type: String
        Default: t2.medium

    ClusterSize:
        Description: How many instances do you want to initially deploy?
        Type: Number
        Default: 3

    MaxSize:
        Description: Maximum size of ASG?
        Type: Number
        Default: 5

    VPC:
        Description: Choose which VPC this cluster should be deployed to
        Type: AWS::EC2::VPC::Id

    Subnets:
        Description: Choose which subnets this cluster should be deployed to
        Type: List<AWS::EC2::Subnet::Id>

    SecurityGroup:
        Description: Select the Security Group to use for the instances
        Type: List<AWS::EC2::SecurityGroup::Id>

    InstanceProfile:
        Description: InstanceProfile to use
        Type: String

    KeyName:
        Description: SSH keypair name
        Type: AWS::EC2::KeyPair::KeyName

Mappings:
  RegionToAMI:
    ap-northeast-1:
      standard: ami-3dbcb441
      min: ami-8bbab2f7
    ap-northeast-2:
      standard: ami-deb916b0
      min: ami-6db71803
    ap-northeast-3:
      standard: ami-2237395f
      min: ami-25373958
    ap-south-1:
      standard: ami-28560c47
      min: ami-24550f4b
    ap-southeast-1:
      standard: ami-4db5ec31
      min: ami-b4b0e9c8
    ap-southeast-2:
      standard: ami-6b62ae09
      min: ami-4462ae26
    ca-central-1:
      standard: ami-35ae2851
      min: ami-b2af29d6
    eu-central-1:
      standard: ami-104419fb
      min: ami-08471ae3
    eu-west-1:
      standard: ami-86c695ff
      min: ami-68c29111
    eu-west-2:
      standard: ami-598b6a3e
      min: ami-5b8b6a3c
    eu-west-3:
      standard: ami-f22c9a8f
      min: ami-af2b9dd2
    sa-east-1:
      standard: ami-a77225cb
      min: ami-1b7b2c77
    us-east-1:
      standard: ami-b270a8cf
      min: ami-3b74ac46
    us-east-2:
      standard: ami-9bc0f1fe
      min: ami-b0c6f7d5
    us-west-1:
      standard: ami-62405102
      min: ami-964352f6
    us-west-2:
      standard: ami-d2f06baa
      min: ami-7beb7003

Resources:

    LaunchConfiguration:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
            ImageId:  !FindInMap [RegionToAMI, !Ref "AWS::Region", min]
            InstanceType: !Ref InstanceType
            SecurityGroups: !Ref SecurityGroup
            IamInstanceProfile: !Ref InstanceProfile
            KeyName: !Ref KeyName
            UserData:
                "Fn::Base64": !Sub |
                    #!/bin/bash
                    cleanup () {
                      CODE=$?
                      /opt/aws/bin/cfn-signal -e $CODE --stack ${AWS::StackName} --resource AutoScalingGroup --region ${AWS::Region}
                      exit $CODE
                    }

                    trap "cleanup" INT TERM EXIT

                    # Update system and install Docker and AWS cli
                    yum update -y
                    yum install -y awscli
                    yum install -y aws-cfn-bootstrap
                    yum install -y docker

                    # Get kube's binaries
                    PLATFORM=amd64
                    KUBE_RELEASE=v1.9.6
                    KUBE_URL=https://storage.googleapis.com/kubernetes-release/release

                    DIR=/usr/local/bin/
                    FILES="kubelet kubectl kube-proxy"

                    for FILE in $FILES; do
                      curl -sS --retry 3 "$KUBE_URL/$KUBE_RELEASE/bin/linux/$PLATFORM/$FILE" -o $DIR/$FILE
                      chmod +x $DIR/$FILE
                    done

    AutoScalingGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            VPCZoneIdentifier: !Ref Subnets
            LaunchConfigurationName: !Ref LaunchConfiguration
            MinSize: !Ref ClusterSize
            MaxSize: !Ref MaxSize
            DesiredCapacity: !Ref ClusterSize
            CreationPolicy:
                ResourceSignal:
                    Timeout: PT10M
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-host
                  PropagateAtLaunch: true
                - Key: Environment
                  Value: !Ref EnvironmentName
                  PropagateAtLaunch: true
